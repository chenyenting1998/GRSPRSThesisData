document()
# do not save this file
pacman::p_load(usethat,testthat,rmarkdown, roxygen2, knitr, devtools)
has_devel()
document()
# do not save this file
pacman::p_load(usethat,testthat,rmarkdown, roxygen2, knitr, devtools, readxl)
# read files
read_xlsx("xlsx/LGD_2006_polychaeta_size.xlsx")
read_xlsx("xlsx/coarse_taxa.xlsx")
# read files
read_xlsx("xlsx/biovolume_method.xlsx")
# read files
biovolume_method <- read_xlsx("xlsx/biovolume_method.xlsx")
coarse_taxa <- read_xlsx("xlsx/coarse_taxa.xlsx")
use_data(biovolume_method, overwrite = T)
use_data(coarse_taxa, overwrite = T)
document()
document()
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(readxl, # .xlsx
writexl,
dplyr, # data wrangling
tidyr,
ggplot2, # ggplot
GGally,
ggrepel,
ggdendro,
ggtern,
vegan, # analysis packages
knitr,
corrplot,
Hmisc,
BenthicPro,
sizeSpectra,
iNEXT,
ecomaestro, # self-made packages for lazy purposes
easypipe,
Polychrome)
# read progress
# source("source/plot_nMDS_func.R")
# source("source/ggplot_theme.R")
source("analysis/Environmental_data.R")
# read progress
# source("source/plot_nMDS_func.R")
# source("source/ggplot_theme.R")
source("analysis_all_cruises/Environmental_data.R")
# read progress
# source("source/plot_nMDS_func.R")
# source("source/ggplot_theme.R")
source("analysis_all_cruises/Environmental_data.R")
source("analysis_all_cruises/Biological_data.R")
source("analysis_all_cruises/Biological_data.R")
pacman::p_load(readxl, # .xlsx
writexl,
dplyr, # data wrangling
tidyr,
ggplot2, # ggplot
GGally,
ggrepel,
ggdendro,
ggtern,
vegan, # analysis packages
knitr,
corrplot,
Hmisc,
BenthicPro,
sizeSpectra,
iNEXT,
ecomaestro, # self-made packages for lazy purposes
easypipe,
Polychrome)
# read progress
# source("source/plot_nMDS_func.R")
# source("source/ggplot_theme.R")
source("analysis_all_cruises/Environmental_data.R")
production_parameter <- read_xlsx("xlsx/BenthicPB_import.xlsx")
# read files
biovolume_methods <- read_xlsx("xlsx/biovolume_method.xlsx")
use_data(biovolume_methods, overwrite = T)
coarse_taxa <- read_xlsx("xlsx/coarse_taxa.xlsx")
use_data(coarse_taxa, overwrite = T)
conversion_factors <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 1)
conversion_factors
View(conversion_factors)
use_data(conversion_factors, overwrite = T)
conversion_factors[conversion_factors$Conversion_factors == "J / mgWM",]
conversion_factors <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 1)
use_data(conversion_factors, overwrite = T)
View(conversion_factors))
View(conversion_factors)
conversion_factors <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 1)
View(conversion_factors)
use_data(conversion_factors, overwrite = T)
conversion_factors[conversion_factors$Conversion_factors == "J / mgWM",]
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
ANN_parameters$
ConFac_j2mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM",]
Viiew(ANN_parameters)
View(ANN_parameters)
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
View(ANN_parameters)
ConFac_j2mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM",]
ConFac_j2mgwm
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC",]
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM",]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC",]
View(mgwm)
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
View(mgc)
View(mgwm)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
View(mgwm)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC", c("Taxon", "Mean")]
match(ANN_parameters$Taxon, mgwm$Taxon)
mgwm[match(ANN_parameters$Taxon, mgwm$Taxon),]
?match
1:5
match(1:5, c(5,5,5,1,2,3,4))
1:5[match(1:5, c(5,5,5,1,2,3,4))]
(1:5)[match(1:5, c(5,5,5,1,2,3,4))]
c(5,5,5,1,2,3,4)[match(1:5, c(5,5,5,1,2,3,4))]
mgwm[match(ANN_parameters$Taxon, mgwm$Taxon),]
mgwm[match(ANN_parameters$Taxon, mgwm$Taxon), "Mean"]
mgc[match(ANN_parameters$Taxon, mgc$Taxon), "Mean"]
1:10 %in% c(1,3,5,9)
match(1:10 , c(1,3,5,9))
c(1,3,5,9)[match(1:10 , c(1,3,5,9))]
mgwm[match(ANN_parameters$Taxon, mgwm$Taxon)]
mgwm[match(ANN_parameters$Taxon, mgwm$Taxon),]
match(mgwm$Taxon, ANN_parameters$Taxon)
a <- c("a", "b", "c")
b <- c("a", "c", "b")
match(a, b)
a[match(a, b)]
mgwm[match(mgwm$Taxon, ANN_parameters$Taxon)] %>% View
mgwm[match(mgwm$Taxon, ANN_parameters$Taxon),] %>% View
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
View(ANN_parameters)
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC", c("Taxon", "Mean")]
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC", c("Taxon", "Mean")]
mgwm[match(mgwm$Taxon, ANN_parameters$Taxon),] %>% View
mgwm[match(ANN_parameters$Taxon, mgwm$Taxon),] %>% View
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC", c("Taxon", "Mean")]
mgc[match(ANN_parameters$Taxon, mgc$Taxon),] %>% View
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
# View(ANN_parameters)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC", c("Taxon", "Mean")]
ANN_parameters$ConFac_j2mgwm <- mgwm[match(ANN_parameters$Taxon, mgwm$Taxon), "Mean"]
ANN_parameters$ConFac_j2mgc  <- mgc[match(ANN_parameters$Taxon, mgc$Taxon), "Mean"]
use_data(ANN_parameters, overwrite = T)
document()
colnames(conversion_factors)
document()
colnames(ANN_parameters)
## coarse taxa -----------------------------------------------------------
coarse_taxa <- read_xlsx("xlsx/coarse_taxa.xlsx")
use_data(coarse_taxa, overwrite = T)
document()
## ANN parameters --------------------------------------------------------
ANN_parameters <- read_xlsx("xlsx/BenthicPB_import.xlsx", sheet = 2)
# View(ANN_parameters)
mgwm <- conversion_factors[conversion_factors$Conversion_factors == "J / mgWM", c("Taxon", "Mean")]
mgc <- conversion_factors[conversion_factors$Conversion_factors == "J / mgC", c("Taxon", "Mean")]
ANN_parameters$ConFac_j2mgwm <- mgwm[match(ANN_parameters$Taxon, mgwm$Taxon), "Mean"]
ANN_parameters$ConFac_j2mgc  <- mgc[match(ANN_parameters$Taxon, mgc$Taxon), "Mean"]
# match is confusing as fuck
# let match(a, b)
# in brief, match tells you the new location of b in terms of a
use_data(ANN_parameters, overwrite = T)
pacman::p_load(readxl,
writexl,
dplyr,
tidyr,
usethat,
ncdf4,
GRSPRSThesisData)
# read .nc
map_nc_path <- dir(path = "xlsx/GEBCO_2020", pattern = "2020.nc", full.names = T)
map_nc <- nc_open(map_nc_path)
# extract lon. and lat.
Longitude <- ncvar_get(map_nc, "lon")
Latitude <- ncvar_get(map_nc, "lat")
Elevation <- ncvar_get(map_nc, "elevation")
# entries as elevation with each row and columns as lats and longs
map <-
expand.grid(Longitude = Longitude,
Latitude = Latitude) %>%
cbind(Elevation = as.vector(Elevation))
bathy_map <- map
range(map$Longitude)
range(map$Latitude)
ggplot2::geom_c
?ggplot2::geom_contour
bathy_map %>%
filter(Longitude <123 ) %>%
filter(Latitude <24) %>%
ggplot() +
geom_contour(aes(x = Longitude, y = Latitude, color = Elevation), binwidth = 500)
library(ggplot2)
bathy_map %>%
filter(Longitude <123 ) %>%
filter(Latitude <24) %>%
ggplot() +
geom_contour(aes(x = Longitude, y = Latitude, color = Elevation), binwidth = 500)
bathy_map %>%
filter(Longitude < 123) %>%
filter(Latitude < 24) %>%
ggplot() +
geom_contour(aes(x = Longitude, y = Latitude), binwidth = 500)
bathy_map %>%
filter(Longitude < 123) %>%
filter(Latitude < 24) %>%
ggplot() +
geom_contour(aes(x = Longitude, y = Latitude, z = Elevation), binwidth = 500)
bathy_map %>%
filter(Longitude < 122) %>%
filter(Latitude < 24 & Latitude > 18) %>%
ggplot() +
geom_contour(aes(x = Longitude, y = Latitude, z = Elevation), binwidth = 1000)
bathy_map %>%
filter(Longitude < 122) %>%
filter(Latitude < 25 & Latitude > 18) %>%
ggplot() +
geom_contour(aes(x = Longitude, y = Latitude, z = Elevation), binwidth = 1000) +
coord_fixed() +
theme_bw()
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/GEBCO.R", echo=TRUE)
pacman::p_load(readxl,
writexl,
dplyr,
tidyr,
usethat,
ncdf4)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/GEBCO.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/GEBCO.R", echo=TRUE)
# do not save this file
pacman::p_load(usethat,testthat,rmarkdown, roxygen2, knitr, devtools, readxl)
library(testthat)
pacman::p_load(readxl,
writexl,
dplyr,
tidyr,
usethis,
ncdf4)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/GEBCO.R", echo=TRUE)
grs_map_name <- dir(path = "xlsx", pattern = ".xyz", full.names = T)
read(grs_map_name)
file(grs_map_name)
grs_map <- file(grs_map_name)
grs_map <- load(grs_map_name)
grs_map <- read.table(grs_map_name)
library(ggplot2)
names(grs_map)
names(grs_map) <- c("Longitude", "Latitude", "Elevation")
names(grs_map)
grs_map_name <- dir(path = "xlsx", pattern = ".xyz", full.names = T)
grs_map <- read.table(grs_map_name)
names(grs_map) <- c("Longitude", "Latitude", "Elevation")
ggplot(grs_map) +
geom_contour(aes(x = Longitude, y = Latitude, z = Elevation), binwidth = 1000)
use_data(grs_map, overwrite = T)
document()
load_all()
library(devtools)
install_github("https://github.com/chenyenting1998/GRSPRSThesisData")
# Comment:
#
# First filling the metadata, and then calculate the biovolume of each individuals
# with the series of homemade functions `assign_method`, `calculate_biovolume`, and
# `define_ophiuroid_size`. The WM of each individuals were by multiplying the volume
# with a specific weight of 1.13, following the assumption of (inset references here).
pacman::p_load(readxl,
writexl,
dplyr,
tidyr,
usethis,
GRSPRSThesisData)
# read OR1_1242 -----------------------------------------------------------
macro <- read_xlsx("xlsx/OR1_1242_macro_size_final.xlsx")
polychaete <-
read_xlsx("xlsx/OR1_1242_polychaeta_size.xlsx") %>%
mutate(Habitat = if_else(Station %in% "GC1", "Canyon",
if_else(Station %in% "GS1", "Slope", "Shelf"))) %>%
mutate(Section = "0-10")
# calculate size
grouping_vairables <- c("Cruise","Habitat","Station","Deployment","Tube","Section")
macro_size <-
macro %>%
full_join(polychaete) %>%
assign_method(method_file = biovolume_methods) %>%
calculate_biovolume() %>%
define_ophiuroid_size(protocol_ophiuroid = "all_arms",
grouping_variables = grouping_vairables) %>%
mutate(WM = Size * 1.13)
macro_size$Type <- NULL
colnames(macro_size)[17] <- "Type"
# remove hydrozoa stalk
macro_size <-
macro_size %>%
filter(!(Taxon == "Hydrozoa" & Note == "Stalk"))
# write: OR1_1242_macrofauna_size
OR1_1242<- macro_size
OR1_1242[OR1_1242$Taxon == "Osteichthyes",]
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1242.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/LGD_2006.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1219.R", echo=TRUE)
document()
load_all()
OR1_1242[OR1_1242$Taxon == "Osteichthyes",]
pacman::p_load(readxl,
writexl,
dplyr,
tidyr,
usethat,
GRSPRSThesisData)
# read LGD_2006 -----------------------------------------------------------
macro <- read_xlsx("xlsx/LGD_2006_macro_size_final.xlsx")
polychaete <-
read_xlsx("xlsx/LGD_2006_polychaeta_size.xlsx",
col_types = c(rep("guess", 7),
rep("text", 2),
rep("guess", 8))) %>%
mutate(Habitat = "Shelf") %>%
mutate(Deployment = 1) %>%
mutate(Section = "0-10")
grouping_vairables <- c("Cruise","Habitat","Station","Deployment","Tube","Section")
# calculate size
macro_size <-
macro %>%
full_join(polychaete) %>%
assign_method(method_file = biovolume_methods) %>%
calculate_biovolume() %>%
define_ophiuroid_size(protocol_ophiuroid = "all_arms",
grouping_variables = grouping_vairables) %>%
mutate(WM = Size * 1.13) # WM
# change the name "method" to "type"
macro_size$Type <- NULL
colnames(macro_size)[17] <- "Type"
# remove hydrozoa stalk
macro_size <-
macro_size %>%
filter(!(Taxon == "Hydrozoa" & Note == "Stalk"))
# write data --------------------------------------------------------------
LGD_2006 <- macro_size
# write data --------------------------------------------------------------
LGD_2006 <- macro_size
LGD_2006$Location <- "PRS"
LGD_2006
colnames(LGD_2006)
LGD_2006[c("Cruise", "Habitat", "Station","Deployment", "Tube", "Section", "Taxon","Family", "Genus", "Condition", "L","W", "a", "b", "Size","Note", "Type", "C", "WM", "Location"),]
LGD_2006[, c("Cruise", "Habitat", "Station","Deployment", "Tube", "Section", "Taxon","Family", "Genus", "Condition", "L","W", "a", "b", "Size","Note", "Type", "C", "WM", "Location")]
LGD_2006[, c("Cruise", "Habitat", , "Location", "Station","Deployment", "Tube", "Section", "Taxon","Family", "Genus", "Condition", "L","W", "a", "b", "Size","Note", "Type", "C", "WM")]
LGD_2006[, c("Cruise", "Habitat", "Location", "Station","Deployment", "Tube", "Section", "Taxon","Family", "Genus", "Condition", "L","W", "a", "b", "Size","Note", "Type", "C", "WM")]
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/LGD_2006.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/LGD_2006.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1219.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1219.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1242.R", echo=TRUE)
document()
load_all()
/size
?size
?LGD_2006
document()
load_all()
?LGD_2006
?OR1_1219
document()
document()
document()
ANN_parameters$ConFac_j2mgwm <- mgwm[match(ANN_parameters$Taxon, mgwm$Taxon), "Mean"]
load_all()
?LGD_2006
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1219.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/OR1_1242.R", echo=TRUE)
source("C:/Users/tumha/Desktop/Lab Work/R_packages/GRSPRSThesisData/curate/LGD_2006.R", echo=TRUE)
load_all()
document()
document()
colnames(ANN_parameters)
colnames(conversion_factors)
document()
